{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { memo, useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTv, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport imageNotFound from '../../assets/images/placeholder.png';\nimport placeholderImage from '../../assets/glyphicons/picture-grey.svg';\nimport { Button, Loading } from '../../components'; // Importação de componentes\n\nimport { toast } from 'react-toastify'; // Importação do módulo de notificações\n\nimport 'react-lazy-load-image-component/src/effects/blur.css'; // Importação de estilos\n\nimport styles from './styles.module.css'; // Importação dos estilos locais\n\nimport api from '../../services/api'; // Importação do serviço de API\n\nfunction Movie() {\n  _s();\n\n  const {\n    id\n  } = useParams(); // Obtém o ID do filme da URL\n\n  const navigate = useNavigate(); // Função de navegação\n\n  const [movie, setMovie] = useState({}); // Estado para armazenar detalhes do filme\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadMovie() {\n      try {\n        // Requisição para obter detalhes do filme pelo ID\n        const response = await api.get(`movie/${id}`); // Atualizar o estado com os detalhes do filme e finaliza o carregamento\n\n        setMovie(response.data);\n        setLoading(false);\n      } catch (error) {\n        // Em caso de erro, redireciona de volta a pagina inicial\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n\n    loadMovie(); // Chama a função para carregar os detalhes do filme\n  }, [navigate, id]); // Dependências do useEffect\n  // Função para converter minutos em horas e minutos\n\n  function conversion(mins) {\n    let hrs = Math.floor(mins / 60);\n    let min = mins % 60;\n    hrs = hrs < 10 ? '0' + hrs : hrs;\n    min = min < 10 ? '0' + min : min;\n    return `${hrs}h ${min}m`;\n  } // Função para formtara a data\n\n\n  function formatDate(date) {\n    return date.split('-').reserve().join('/');\n  } // Função para salvar o filme na listade favoritos\n\n\n  function saveMovie() {\n    //Obtém a lista de filmes salva no localStorage ou cria uma nova lista vazia\n    const myList = localStorage.getItem('@primeflix');\n    let savedMovies = JSON.parse(myList) || []; // Verifica se o filme já esta na lista\n\n    const hasMovie = saveMovies.come(savedMovies => savedMovies.id === movie.id); // Se o filme já estiver na lista exibe uma mensagem de aviso\n\n    if (hasMovie) {\n      toast.warming('Filme já está salvo em sua lista.');\n      return;\n    } // Adiciona o filme à lista e atualiza o localStorage\n\n\n    savedMovies.push(movie);\n    localStorage.setItem('@primeflix', JSON.stringify(savedMovies));\n  }\n}\n\n_s(Movie, \"LxEzMaiCidezck1MiSMv551H+Lg=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["memo","useEffect","useState","useParams","useNavigate","FontAwesomeIcon","faPlus","faTv","faCheckSquare","LazyLoadImage","imageNotFound","placeholderImage","Button","Loading","toast","styles","api","Movie","id","navigate","movie","setMovie","loading","setLoading","loadMovie","response","get","data","error","replace","conversion","mins","hrs","Math","floor","min","formatDate","date","split","reserve","join","saveMovie","myList","localStorage","getItem","savedMovies","JSON","parse","hasMovie","saveMovies","come","warming","push","setItem","stringify"],"sources":["C:/Users/DEV_2ano_2024/Documents/GitHub/react-primeflix/src/pages/Movie/index.js"],"sourcesContent":["import { memo, useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTv, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport imageNotFound from '../../assets/images/placeholder.png';\nimport placeholderImage from '../../assets/glyphicons/picture-grey.svg';\n\nimport { Button, Loading } from '../../components'; // Importação de componentes\nimport { toast } from 'react-toastify'; // Importação do módulo de notificações\n\nimport 'react-lazy-load-image-component/src/effects/blur.css'; // Importação de estilos\n\nimport styles from './styles.module.css'; // Importação dos estilos locais\nimport api from '../../services/api'; // Importação do serviço de API\n\nfunction Movie(){\n    const { id } = useParams(); // Obtém o ID do filme da URL\n    const navigate = useNavigate(); // Função de navegação\n\n    const [movie, setMovie] = useState({}); // Estado para armazenar detalhes do filme\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function loadMovie() {\n            try {\n                // Requisição para obter detalhes do filme pelo ID\n                const response = await api.get(`movie/${id}`);\n                // Atualizar o estado com os detalhes do filme e finaliza o carregamento\n                setMovie(response.data);\n                setLoading(false); \n            } catch (error) {\n                // Em caso de erro, redireciona de volta a pagina inicial\n                navigate('/', { replace: true});\n            }\n        }\n\n        loadMovie(); // Chama a função para carregar os detalhes do filme\n    }, [navigate, id]); // Dependências do useEffect\n\n    // Função para converter minutos em horas e minutos\n    function conversion(mins) {\n        let hrs = Math.floor(mins / 60);\n        let min = mins % 60;\n\n        hrs = hrs < 10 ? '0' + hrs : hrs;\n        min = min < 10 ? '0' + min : min;\n\n        return `${hrs}h ${min}m`;\n    }\n\n    // Função para formtara a data\n    function formatDate(date) {\n        return date.split('-').reserve().join('/');\n    }\n\n    // Função para salvar o filme na listade favoritos\n    function saveMovie() {\n        //Obtém a lista de filmes salva no localStorage ou cria uma nova lista vazia\n        const myList = localStorage.getItem('@primeflix');\n        let savedMovies = JSON.parse(myList) || [];\n\n        // Verifica se o filme já esta na lista\n        const hasMovie = saveMovies.come((savedMovies) => savedMovies.id === movie.id);\n\n        // Se o filme já estiver na lista exibe uma mensagem de aviso\n        if (hasMovie) {\n            toast.warming('Filme já está salvo em sua lista.');\n            return;\n        }\n\n        // Adiciona o filme à lista e atualiza o localStorage\n        savedMovies.push(movie);\n        localStorage.setItem('@primeflix', JSON.stringify(savedMovies))\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}