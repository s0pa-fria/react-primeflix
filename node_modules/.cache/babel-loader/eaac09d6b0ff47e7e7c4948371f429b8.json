{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV_2ano_2024\\\\Documents\\\\GitHub\\\\react-primeflix\\\\src\\\\components\\\\Button\\\\index.js\";\nimport PropTypes from 'prop-types'; // Importa PropTypes para validar as props\n\nimport styles from './styles.module.css'; // Importa estilos locais\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button(_ref) {\n  let {\n    icon,\n    text,\n    backgroundColor,\n    handleOnClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${styles.button} ${styles[backgroundColor]}` // Aplica estilos dinâmicos com base na cor de fundo\n    ,\n    onClick: handleOnClick // Adiciona um manipulador de evento de clique\n    ,\n    children: [icon, \" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // Define as propTypes para validar as props recebidas\n\n\n_c = Button;\nButton.propTypes = {\n  icon: PropTypes.any,\n  // O ícone pode ser de qualquer tipo\n  text: PropTypes.string.isRequired,\n  // O texto é uma string obrigatória\n  backgroundColor: PropTypes.string.isRequired,\n  // A cor de fundo é uma string obrigatória\n  handleOnClick: PropTypes.func // O manipulador de evento de clique é uma função opcional\n\n};\nexport default Button; // Exporta o componente Button\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["PropTypes","styles","Button","icon","text","backgroundColor","handleOnClick","button","propTypes","any","string","isRequired","func"],"sources":["C:/Users/DEV_2ano_2024/Documents/GitHub/react-primeflix/src/components/Button/index.js"],"sourcesContent":["import PropTypes from 'prop-types'; // Importa PropTypes para validar as props\nimport styles from './styles.module.css'; // Importa estilos locais\n\nfunction Button({ icon, text, backgroundColor, handleOnClick }) { \n  return (\n    <button \n      className={`${styles.button} ${styles[backgroundColor]}`} // Aplica estilos dinâmicos com base na cor de fundo\n      onClick={handleOnClick} // Adiciona um manipulador de evento de clique\n    >\n      {icon} {text} {/* Renderiza o ícone e o texto do botão */}\n    </button>\n  );\n}\n\n// Define as propTypes para validar as props recebidas\nButton.propTypes = {\n  icon: PropTypes.any, // O ícone pode ser de qualquer tipo\n  text: PropTypes.string.isRequired, // O texto é uma string obrigatória\n  backgroundColor: PropTypes.string.isRequired, // A cor de fundo é uma string obrigatória\n  handleOnClick: PropTypes.func // O manipulador de evento de clique é uma função opcional\n}\n\nexport default Button; // Exporta o componente Button\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;;;;AAE1C,SAASC,MAAT,OAAgE;EAAA,IAAhD;IAAEC,IAAF;IAAQC,IAAR;IAAcC,eAAd;IAA+BC;EAA/B,CAAgD;EAC9D,oBACE;IACE,SAAS,EAAG,GAAEL,MAAM,CAACM,MAAO,IAAGN,MAAM,CAACI,eAAD,CAAkB,EADzD,CAC4D;IAD5D;IAEE,OAAO,EAAEC,aAFX,CAE0B;IAF1B;IAAA,WAIGH,IAJH,OAIUC,IAJV;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,C,CAED;;;KAXSF,M;AAYTA,MAAM,CAACM,SAAP,GAAmB;EACjBL,IAAI,EAAEH,SAAS,CAACS,GADC;EACI;EACrBL,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UAFN;EAEkB;EACnCN,eAAe,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UAHjB;EAG6B;EAC9CL,aAAa,EAAEN,SAAS,CAACY,IAJR,CAIa;;AAJb,CAAnB;AAOA,eAAeV,MAAf,C,CAAuB"},"metadata":{},"sourceType":"module"}