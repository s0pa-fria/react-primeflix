[{"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\index.js":"1","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\App.js":"2","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\routes.js":"3","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\index.js":"4","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\index.js":"5","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Home\\index.js":"6","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Movie\\index.js":"7","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Favorites\\index.js":"8","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Error\\index.js":"9","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Header\\index.js":"10","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Button\\index.js":"11","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Footer\\index.js":"12","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Loading\\index.js":"13","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\services\\api.js":"14"},{"size":537,"mtime":1713550125906,"results":"15","hashOfConfig":"16"},{"size":556,"mtime":1710981440000,"results":"17","hashOfConfig":"16"},{"size":1306,"mtime":1710981384000,"results":"18","hashOfConfig":"16"},{"size":537,"mtime":1710983278000,"results":"19","hashOfConfig":"16"},{"size":472,"mtime":1710982822000,"results":"20","hashOfConfig":"16"},{"size":9170,"mtime":1713537974030,"results":"21","hashOfConfig":"16"},{"size":6935,"mtime":1713543239286,"results":"22","hashOfConfig":"16"},{"size":2478,"mtime":1713537579343,"results":"23","hashOfConfig":"16"},{"size":921,"mtime":1713535139985,"results":"24","hashOfConfig":"16"},{"size":707,"mtime":1710982568000,"results":"25","hashOfConfig":"16"},{"size":985,"mtime":1710982500000,"results":"26","hashOfConfig":"16"},{"size":1567,"mtime":1710982530000,"results":"27","hashOfConfig":"16"},{"size":777,"mtime":1710982592000,"results":"28","hashOfConfig":"16"},{"size":642,"mtime":1710981474000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hdral2",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\App.js",[],[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\routes.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Home\\index.js",["75","76"],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Movie\\index.js",["77"],[],"import { memo, useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTv, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport imageNotFound from '../../assets/images/placeholder.png';\nimport placeholderImage from '../../assets/glyphicons/picture-grey.svg';\n\nimport { Button, Loading } from '../../components'; // Importação de componentes\nimport { toast } from 'react-toastify'; // Importação do módulo de notificações\n\nimport 'react-lazy-load-image-component/src/effects/blur.css'; // Importação de estilos\n\nimport styles from './styles.module.css'; // Importação dos estilos locais\nimport api from '../../services/api'; // Importação do serviço de API\n\nfunction Movie(){\n    const { id } = useParams(); // Obtém o ID do filme da URL\n    const navigate = useNavigate(); // Função de navegação\n\n    const [movie, setMovie] = useState({}); // Estado para armazenar detalhes do filme\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function loadMovie() {\n            try {\n                // Requisição para obter detalhes do filme pelo ID\n                const response = await api.get(`movie/${id}`);\n                // Atualizar o estado com os detalhes do filme e finaliza o carregamento\n                setMovie(response.data);\n                setLoading(false); \n            } catch (error) {\n                // Em caso de erro, redireciona de volta a pagina inicial\n                navigate('/', { replace: true});\n            }\n        }\n\n        loadMovie(); // Chama a função para carregar os detalhes do filme\n    }, [navigate, id]); // Dependências do useEffect\n\n    // Função para converter minutos em horas e minutos\n    function conversion(mins) {\n        let hrs = Math.floor(mins / 60);\n        let min = mins % 60;\n\n        hrs = hrs < 10 ? '0' + hrs : hrs;\n        min = min < 10 ? '0' + min : min;\n\n        return `${hrs}h ${min}m`;\n    }\n\n    // Função para formtara a data\n    function formatDate(date) {\n        return date.split('-').reserve().join('/');\n    }\n\n    // Função para salvar o filme na listade favoritos\n    function saveMovie() {\n        //Obtém a lista de filmes salva no localStorage ou cria uma nova lista vazia\n        const myList = localStorage.getItem('@primeflix');\n        let savedMovies = JSON.parse(myList) || [];\n\n        // Verifica se o filme já esta na lista\n        const hasMovie = savedMovies.come((savedMovies) => savedMovies.id === movie.id);\n\n        // Se o filme já estiver na lista exibe uma mensagem de aviso\n        if (hasMovie) {\n            toast.warming('Filme já está salvo em sua lista.');\n            return;\n        }\n\n        // Adiciona o filme à lista e atualiza o localStorage\n        savedMovies.push(movie);\n        localStorage.setItem('@primeflix', JSON.stringify(savedMovies));\n\n        // Exibe uma mensagem de sucesso ao salvar o filme\n        toast.success('Filme salvo com sucesso.');\n    }\n\n    // Se ainda estiver carregando, exibe uma mensagem de carregamento\n    if (loading) {\n        return (\n            <Loading text='Carregando detalhes...' />\n        );\n    }\n\n    // Renderiza os detalhes do filme\n    return (\n        <div className={styles.container}> {/* Contêiner principal */}\n            <div className={styles.title} style={{ backgroundImage : `linear-gradient(to right, rgba(var (--primeflixDark), 0.9) 100%, rgba(var(--primeflixDark), 0) 100%), url('https://image.tmsb.org/t/p/original/${movie.backdrop_path}')`}}> {/* Título com imagem de fundo */}\n                <div className={styles.grid_title}> {/* Grid para alinhar elementos */}\n                    <div className={styles.grid_title_img}> {/* Imagem do filme */}\n                        {\n                            movie.poster_path !== null ? (\n                                <LazyLoadImage\n                                    src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                                    effect='blur'\n                                    alt={movie.title}\n                                    title={movie.title}\n                                    placeholderSrc={placeholderImage}\n                                />\n                            ) : (\n                                <img\n                                    src={imageNotFound}\n                                    alt={movie.title}\n                                    title={movie.title}\n                                />\n                            )\n                        }\n                    </div>\n\n                    <h1>\n                        {movie.title}\n                        <span className={styles.release_date}>\n                            {movie.release_date.slice(0, 4) && `(${movie.release_date.slice(0, 4)})`}\n                        </span>\n                    </h1> {/* Título e ano de lançamento */}\n                    <p>\n                        {formatDate(movie.release_date)} {`(${movie.original_language.toUppercase()})`} {/* Data de lançamento, idioma original e gêneros */}\n                        <span>&sdot;</span>\n                        {movie.genres.map(u => u.name) .join(', ')}\n                        <span>&sdot;</span>\n                        {conversion(movie.runtime)} {/* Duração do filme */}\n                    </p>\n\n                    <div className={styles.area_buttons}> {/* Área de botôes */}\n                        <a href={`https://yotube.com/results?search_query=${movie.title} Trailer`} target='blank' rel='external'> {/* Link para o trailer do filme */}\n                            <Button\n                                icon={<FontAwesomeIcon icon={faTv} />}\n                                text='Trailer'\n                                backgroundColor='white'\n                            />\n                        </a>\n                        <Button\n                                icon={<FontAwesomeIcon icon={faPlus} />}\n                                text='Salvar' //Botão para salvar o filme na lista de favoritos\n                                backgroundColor='blue'\n                                handleOnClick={saveMovie}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className={styles.movie_info}> {/* Informações do filme */}\n                <h1>Sinopse</h1>\n                <p>{movie.overview || 'Não Disponível'}</p> {/* Sinopse do filme */}\n                <h2>\n                    <FontAwesomeIcon icon={faCheckSquare} size='xs' /> {movie.vote_average.toFixed(1)}/10\n                </h2> {/* Avaliação do filme */}\n            </div>\n        </div>\n    );\n}\n\nexport default memo(Movie); // Exporta o componente Movie","C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Favorites\\index.js",[],[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\pages\\Error\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Header\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Button\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Footer\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\components\\Loading\\index.js",[],[],"C:\\Users\\DEV_2ano_2024\\Documents\\GitHub\\react-primeflix\\src\\services\\api.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":25,"column":11,"nodeType":"80","messageId":"81","endLine":25,"endColumn":17},{"ruleId":"78","severity":1,"message":"82","line":95,"column":11,"nodeType":"80","messageId":"81","endLine":95,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":122,"column":26,"nodeType":"85","messageId":"86","endLine":122,"endColumn":61,"fix":"87"},"no-unused-vars","'counts' is assigned a value but never used.","Identifier","unusedVar","'handleLoadMore' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property join.","MemberExpression","unexpectedWhitespace",{"range":"88","text":"89"},[5320,5322],"."]